server:
  port: 8080
spring:
  application:
    name: customer-service
  datasource:
    password: password
#    url: jdbc:postgresql://{name of kubernetes service component that talks to stateful set linked to postgres pod}:5432/customer
    url: jdbc:postgresql://postgres:5432/customer
    username: amigoscode
  jpa:
#    bare in mind that in k8s environment this is risky - if a second pod replica comes along, it gonna destroy the db
#    see k8s/minikube/services/customer/deployment.yml spec.replicas
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    show-sql: true
  zipkin:
#    base-url: http://{name of kubernetes service component that talks to stateful set linked to zipkin pod}:9411
    base-url: http://zipkin:9411
  rabbitmq:
#    addresses: {name of kubernetes service component that talks to stateful set linked to rabbitmq pod}:5672
    addresses: rabbitmq:5672
#    todo configure to run kafka in k8s
  kafka:
    bootstrap-servers: localhost:9092
eureka:
  client:
    service-url:
      defaultZone: http://eureka-server:8761/eureka
    fetch-registry: true
    register-with-eureka: true
    enabled: false

